// src/app/admin/actions.ts
'use server';

import { revalidatePath } from 'next/cache';
import { addMenuItem, deleteMenuItem, updateMenuItem } from '@/lib/mongodb';
import type { MenuItem } from '@/lib/types';

// Omit '_id' as it's generated by MongoDB and we use a string 'id' on the client
type ClientMenuItem = Omit<MenuItem, 'id' | '_id'>;

export async function createMenuItemAction(data: ClientMenuItem) {
  try {
    await addMenuItem(data);
    revalidatePath('/admin/menu');
    revalidatePath('/menu');
    revalidatePath('/');
    return { success: true, message: 'Menu item added successfully.' };
  } catch (error) {
    console.error('Error adding menu item:', error);
    return { success: false, message: 'Failed to add menu item.' };
  }
}

export async function updateMenuItemAction(id: string, data: ClientMenuItem) {
  try {
    await updateMenuItem(id, data);
    revalidatePath('/admin/menu');
    revalidatePath('/menu');
    revalidatePath('/');
    return { success: true, message: 'Menu item updated successfully.' };
  } catch (error) {
    console.error('Error updating menu item:', error);
    return { success: false, message: 'Failed to update menu item.' };
  }
}

export async function deleteMenuItemAction(id: string) {
  try {
    await deleteMenuItem(id);
    revalidatePath('/admin/menu');
    revalidatePath('/menu');
    revalidatePath('/');
    return { success: true, message: 'Menu item deleted successfully.' };
  } catch (error) {
    console.error('Error deleting menu item:', error);
    return { success: false, message: 'Failed to delete menu item.' };
  }
}
